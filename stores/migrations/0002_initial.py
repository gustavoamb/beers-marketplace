# Generated by Django 4.1.4 on 2024-08-30 01:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("locations", "0001_initial"),
        ("payments", "0003_initial"),
        ("stores", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="userhasfavoritestore",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="storereview",
            name="store",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to="stores.store",
            ),
        ),
        migrations.AddField(
            model_name="storereview",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="storehasproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="store_prices",
                to="stores.product",
            ),
        ),
        migrations.AddField(
            model_name="storehasproduct",
            name="store",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_prices",
                to="stores.store",
            ),
        ),
        migrations.AddField(
            model_name="store",
            name="location",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="locations.location",
            ),
        ),
        migrations.AddField(
            model_name="store",
            name="products",
            field=models.ManyToManyField(
                through="stores.StoreHasProduct", to="stores.product"
            ),
        ),
        migrations.AddField(
            model_name="store",
            name="user",
            field=models.OneToOneField(
                help_text="The store's user information.",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="scheduleday",
            name="store",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stores.store"
            ),
        ),
        migrations.AddField(
            model_name="purchasehaspromotion",
            name="promotion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stores.promotion"
            ),
        ),
        migrations.AddField(
            model_name="purchasehaspromotion",
            name="purchase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stores.purchase"
            ),
        ),
        migrations.AddField(
            model_name="purchasehasproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stores.product"
            ),
        ),
        migrations.AddField(
            model_name="purchasehasproduct",
            name="purchase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="stores.purchase"
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="gift_recipient",
            field=models.ForeignKey(
                help_text="The user receiving the gift",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="products",
            field=models.ManyToManyField(
                related_name="products",
                through="stores.PurchaseHasProduct",
                to="stores.product",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="promotions",
            field=models.ManyToManyField(
                related_name="purchases",
                through="stores.PurchaseHasPromotion",
                to="stores.promotion",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="store",
            field=models.ForeignKey(
                help_text="The store offering the purchased products",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="stores.store",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="store_payment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchases",
                to="payments.storepayment",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="user",
            field=models.ForeignKey(
                help_text="The user who made the purchase",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchases",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="promotion",
            name="store",
            field=models.ForeignKey(
                help_text="The store offering the promotion",
                on_delete=django.db.models.deletion.CASCADE,
                to="stores.store",
            ),
        ),
        migrations.AddConstraint(
            model_name="userhasfavoritestore",
            constraint=models.UniqueConstraint(
                fields=("user", "store"), name="user_store_unique_together"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="storereview",
            unique_together={("store", "user")},
        ),
        migrations.AddConstraint(
            model_name="storehasproduct",
            constraint=models.UniqueConstraint(
                fields=("store", "product"), name="store_product_unique_together"
            ),
        ),
    ]
